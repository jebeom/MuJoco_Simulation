{
    "sourceFile": "simulate.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 49,
            "patches": [
                {
                    "date": 1691482752037,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1691482807562,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n #!/usr/bin/env python3\n import numpy as np\n-from build.devel.lib import controller\n+import controller\n import mujoco\n from time import sleep\n \n from mujoco import viewer\n"
                },
                {
                    "date": 1691483097554,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n         self.dof = 9  # all joints (include gripper joint)\n         self.model_path = \"model/fr3.xml\"\n         self.model = mujoco.MjModel.from_xml_path(self.model_path)\n         self.data = mujoco.MjData(self.model)\n-        self.controller = controller.CController(self.k)\n+        self.controller = controller.CController()\n         self._torque = np.zeros(self.dof, dtype=np.float64)\n \n         self.viewer = viewer.launch_passive(model=self.model, data=self.data)\n \n"
                },
                {
                    "date": 1691483172384,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n #!/usr/bin/env python3\n import numpy as np\n import controller\n-import mujoco\n+form build.devel import mujoco\n from time import sleep\n \n from mujoco import viewer\n class fr3:\n"
                },
                {
                    "date": 1691483196300,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n #!/usr/bin/env python3\n import numpy as np\n import controller\n-form build.devel import mujoco\n+form build import mujoco\n from time import sleep\n \n from mujoco import viewer\n class fr3:\n"
                },
                {
                    "date": 1691483207336,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n #!/usr/bin/env python3\n import numpy as np\n import controller\n-form build import mujoco\n+from build.devel import mujoco\n from time import sleep\n \n from mujoco import viewer\n class fr3:\n"
                },
                {
                    "date": 1691483214115,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n #!/usr/bin/env python3\n import numpy as np\n import controller\n-from build.devel import mujoco\n+from /build import mujoco\n from time import sleep\n \n from mujoco import viewer\n class fr3:\n"
                },
                {
                    "date": 1691483228357,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n #!/usr/bin/env python3\n import numpy as np\n import controller\n-from /build import mujoco\n+import mujoco\n from time import sleep\n \n from mujoco import viewer\n class fr3:\n"
                },
                {
                    "date": 1691483282622,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,10 +26,9 @@\n         # sleep(10)\n \n         while self.viewer.is_running():#self.data.time < self.duration:\n             self.viewer.sync()\n-            self.controller.read(self.data.time, self.data.qpos[0:self.dof], self.data.qvel[0:self.dof],\n-                                 self.model.opt.timestep, self.data.xpos.reshape(66,))\n+            self.controller.read(self.data.time, self.data.qpos[0:self.dof], self.data.qvel[0:self.dof])\n             # print(self.data.time)\n             self.controller.control_mujoco()\n \n             self._torque = self.controller.write()\n"
                },
                {
                    "date": 1691483365610,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n #!/usr/bin/env python3\n import numpy as np\n import controller\n-import mujoco\n+import mujoco==2.3.3\n from time import sleep\n \n from mujoco import viewer\n class fr3:\n"
                },
                {
                    "date": 1691483371408,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n #!/usr/bin/env python3\n import numpy as np\n import controller\n-import mujoco==2.3.3\n+import mujoco\n from time import sleep\n \n from mujoco import viewer\n class fr3:\n"
                },
                {
                    "date": 1691483507941,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n         # sleep(10)\n \n         while self.viewer.is_running():#self.data.time < self.duration:\n             self.viewer.sync()\n-            self.controller.read(self.data.time, self.data.qpos[0:self.dof], self.data.qvel[0:self.dof])\n+            self.controller.read(self.data.time, self.data.qpos[0:self.k], self.data.qvel[0:self.k])\n             # print(self.data.time)\n             self.controller.control_mujoco()\n \n             self._torque = self.controller.write()\n"
                },
                {
                    "date": 1691483569502,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n         # sleep(10)\n \n         while self.viewer.is_running():#self.data.time < self.duration:\n             self.viewer.sync()\n-            self.controller.read(self.data.time, self.data.qpos[0:self.k], self.data.qvel[0:self.k])\n+            self.controller.read(self.data.time, self.data.qpos, self.data.qvel)\n             # print(self.data.time)\n             self.controller.control_mujoco()\n \n             self._torque = self.controller.write()\n"
                },
                {
                    "date": 1691483576827,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n         # sleep(10)\n \n         while self.viewer.is_running():#self.data.time < self.duration:\n             self.viewer.sync()\n-            self.controller.read(self.data.time, self.data.qpos, self.data.qvel)\n+            #self.controller.read(self.data.time, self.data.qpos, self.data.qvel)\n             # print(self.data.time)\n             self.controller.control_mujoco()\n \n             self._torque = self.controller.write()\n"
                },
                {
                    "date": 1691483583719,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n         while self.viewer.is_running():#self.data.time < self.duration:\n             self.viewer.sync()\n             #self.controller.read(self.data.time, self.data.qpos, self.data.qvel)\n             # print(self.data.time)\n-            self.controller.control_mujoco()\n+            #self.controller.control_mujoco()\n \n             self._torque = self.controller.write()\n             for i in range(self.dof):\n                 self.data.ctrl[i] = self._torque[i]\n"
                },
                {
                    "date": 1691483655479,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n             # print(self.data.time)\n             #self.controller.control_mujoco()\n \n             self._torque = self.controller.write()\n-            for i in range(self.dof):\n+            for i in range(self.k):\n                 self.data.ctrl[i] = self._torque[i]\n \n             mujoco.mj_step(self.model, self.data)\n             sleep(0.002)\n"
                },
                {
                    "date": 1691483666364,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,11 +26,11 @@\n         # sleep(10)\n \n         while self.viewer.is_running():#self.data.time < self.duration:\n             self.viewer.sync()\n-            #self.controller.read(self.data.time, self.data.qpos, self.data.qvel)\n+            self.controller.read(self.data.time, self.data.qpos, self.data.qvel)\n             # print(self.data.time)\n-            #self.controller.control_mujoco()\n+            self.controller.control_mujoco()\n \n             self._torque = self.controller.write()\n             for i in range(self.k):\n                 self.data.ctrl[i] = self._torque[i]\n"
                },
                {
                    "date": 1691483674573,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n         # sleep(10)\n \n         while self.viewer.is_running():#self.data.time < self.duration:\n             self.viewer.sync()\n-            self.controller.read(self.data.time, self.data.qpos, self.data.qvel)\n+            #self.controller.read(self.data.time, self.data.qpos, self.data.qvel)\n             # print(self.data.time)\n             self.controller.control_mujoco()\n \n             self._torque = self.controller.write()\n"
                },
                {
                    "date": 1691483684215,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n         # sleep(10)\n \n         while self.viewer.is_running():#self.data.time < self.duration:\n             self.viewer.sync()\n-            #self.controller.read(self.data.time, self.data.qpos, self.data.qvel)\n+            self.controller.read(self.data.time, self.data.qpos, self.data.qvel)\n             # print(self.data.time)\n             self.controller.control_mujoco()\n \n             self._torque = self.controller.write()\n"
                },
                {
                    "date": 1691483714780,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n         self.model_path = \"model/fr3.xml\"\n         self.model = mujoco.MjModel.from_xml_path(self.model_path)\n         self.data = mujoco.MjData(self.model)\n         self.controller = controller.CController()\n-        self._torque = np.zeros(self.dof, dtype=np.float64)\n+        self._torque = np.zeros(self.k, dtype=np.float64)\n \n         self.viewer = viewer.launch_passive(model=self.model, data=self.data)\n \n         # self.scene_option = mujoco.MjvOption()\n"
                },
                {
                    "date": 1691483771364,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,8 +26,9 @@\n         # sleep(10)\n \n         while self.viewer.is_running():#self.data.time < self.duration:\n             self.viewer.sync()\n+            print(self.data.qpos)\n             self.controller.read(self.data.time, self.data.qpos, self.data.qvel)\n             # print(self.data.time)\n             self.controller.control_mujoco()\n \n"
                },
                {
                    "date": 1691483789907,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,8 +26,9 @@\n         # sleep(10)\n \n         while self.viewer.is_running():#self.data.time < self.duration:\n             self.viewer.sync()\n+            print(\"1\"\")\n             print(self.data.qpos)\n             self.controller.read(self.data.time, self.data.qpos, self.data.qvel)\n             # print(self.data.time)\n             self.controller.control_mujoco()\n"
                },
                {
                    "date": 1691483812363,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,10 +26,11 @@\n         # sleep(10)\n \n         while self.viewer.is_running():#self.data.time < self.duration:\n             self.viewer.sync()\n-            print(\"1\"\")\n+            print(\"1\")\n             print(self.data.qpos)\n+            print(\"2\")\n             self.controller.read(self.data.time, self.data.qpos, self.data.qvel)\n             # print(self.data.time)\n             self.controller.control_mujoco()\n \n"
                },
                {
                    "date": 1691483876667,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n             self.viewer.sync()\n             print(\"1\")\n             print(self.data.qpos)\n             print(\"2\")\n-            self.controller.read(self.data.time, self.data.qpos, self.data.qvel)\n+            self.controller.read(self.data.time, self.data.qpos[0:7], self.data.qvel[0:7])\n             # print(self.data.time)\n             self.controller.control_mujoco()\n \n             self._torque = self.controller.write()\n"
                },
                {
                    "date": 1691483885198,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,11 +26,11 @@\n         # sleep(10)\n \n         while self.viewer.is_running():#self.data.time < self.duration:\n             self.viewer.sync()\n-            print(\"1\")\n-            print(self.data.qpos)\n-            print(\"2\")\n+            # print(\"1\")\n+            # print(self.data.qpos)\n+            # print(\"2\")\n             self.controller.read(self.data.time, self.data.qpos[0:7], self.data.qvel[0:7])\n             # print(self.data.time)\n             self.controller.control_mujoco()\n \n"
                },
                {
                    "date": 1691483894019,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n \n         while self.viewer.is_running():#self.data.time < self.duration:\n             self.viewer.sync()\n             # print(\"1\")\n-            # print(self.data.qpos)\n+            print(self.data.qpos)\n             # print(\"2\")\n             self.controller.read(self.data.time, self.data.qpos[0:7], self.data.qvel[0:7])\n             # print(self.data.time)\n             self.controller.control_mujoco()\n"
                },
                {
                    "date": 1691484042647,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n \n         while self.viewer.is_running():#self.data.time < self.duration:\n             self.viewer.sync()\n             # print(\"1\")\n-            print(self.data.qpos)\n+            # print(self.data.qpos)\n             # print(\"2\")\n             self.controller.read(self.data.time, self.data.qpos[0:7], self.data.qvel[0:7])\n             # print(self.data.time)\n             self.controller.control_mujoco()\n@@ -37,8 +37,9 @@\n             self._torque = self.controller.write()\n             for i in range(self.k):\n                 self.data.ctrl[i] = self._torque[i]\n \n+            print(self._torque)\n             mujoco.mj_step(self.model, self.data)\n             sleep(0.002)\n         self.viewer.close()\n \n"
                },
                {
                    "date": 1691484135306,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n                 self.data.ctrl[i] = self._torque[i]\n \n             print(self._torque)\n             mujoco.mj_step(self.model, self.data)\n-            sleep(0.002)\n+            # sleep(0.002)\n         self.viewer.close()\n \n def main():\n     panda = fr3()\n"
                },
                {
                    "date": 1691484157823,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n             self._torque = self.controller.write()\n             for i in range(self.k):\n                 self.data.ctrl[i] = self._torque[i]\n \n-            print(self._torque)\n+            # print(self._torque)\n             mujoco.mj_step(self.model, self.data)\n             # sleep(0.002)\n         self.viewer.close()\n \n"
                },
                {
                    "date": 1691546148437,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n #!/usr/bin/env python3\n import numpy as np\n-import controller\n+import gpu_library\n import mujoco\n from time import sleep\n \n from mujoco import viewer\n@@ -11,9 +11,9 @@\n         self.dof = 9  # all joints (include gripper joint)\n         self.model_path = \"model/fr3.xml\"\n         self.model = mujoco.MjModel.from_xml_path(self.model_path)\n         self.data = mujoco.MjData(self.model)\n-        self.controller = controller.CController()\n+        self.controller = gpu_library.CController()\n         self._torque = np.zeros(self.k, dtype=np.float64)\n \n         self.viewer = viewer.launch_passive(model=self.model, data=self.data)\n \n"
                },
                {
                    "date": 1691562472350,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n #!/usr/bin/env python3\n import numpy as np\n-import gpu_library\n+import controller\n import mujoco\n from time import sleep\n \n from mujoco import viewer\n@@ -11,9 +11,9 @@\n         self.dof = 9  # all joints (include gripper joint)\n         self.model_path = \"model/fr3.xml\"\n         self.model = mujoco.MjModel.from_xml_path(self.model_path)\n         self.data = mujoco.MjData(self.model)\n-        self.controller = gpu_library.CController()\n+        self.controller = controller.CController()\n         self._torque = np.zeros(self.k, dtype=np.float64)\n \n         self.viewer = viewer.launch_passive(model=self.model, data=self.data)\n \n"
                },
                {
                    "date": 1691562956733,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n #!/usr/bin/env python3\n import numpy as np\n-import controller\n+import libMyLibrary\n import mujoco\n from time import sleep\n \n from mujoco import viewer\n@@ -11,9 +11,9 @@\n         self.dof = 9  # all joints (include gripper joint)\n         self.model_path = \"model/fr3.xml\"\n         self.model = mujoco.MjModel.from_xml_path(self.model_path)\n         self.data = mujoco.MjData(self.model)\n-        self.controller = controller.CController()\n+        self.controller = libMyLibrary.CController()\n         self._torque = np.zeros(self.k, dtype=np.float64)\n \n         self.viewer = viewer.launch_passive(model=self.model, data=self.data)\n \n"
                },
                {
                    "date": 1691563400122,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n #!/usr/bin/env python3\n import numpy as np\n-import libMyLibrary\n+import pybind_module\n import mujoco\n from time import sleep\n \n from mujoco import viewer\n@@ -11,9 +11,9 @@\n         self.dof = 9  # all joints (include gripper joint)\n         self.model_path = \"model/fr3.xml\"\n         self.model = mujoco.MjModel.from_xml_path(self.model_path)\n         self.data = mujoco.MjData(self.model)\n-        self.controller = libMyLibrary.CController()\n+        self.controller = pybind_module.CController()\n         self._torque = np.zeros(self.k, dtype=np.float64)\n \n         self.viewer = viewer.launch_passive(model=self.model, data=self.data)\n \n"
                },
                {
                    "date": 1691564693610,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n #!/usr/bin/env python3\n import numpy as np\n-import pybind_module\n+import controller\n import mujoco\n from time import sleep\n \n from mujoco import viewer\n@@ -11,9 +11,9 @@\n         self.dof = 9  # all joints (include gripper joint)\n         self.model_path = \"model/fr3.xml\"\n         self.model = mujoco.MjModel.from_xml_path(self.model_path)\n         self.data = mujoco.MjData(self.model)\n-        self.controller = pybind_module.CController()\n+        self.controller = controller.CController()\n         self._torque = np.zeros(self.k, dtype=np.float64)\n \n         self.viewer = viewer.launch_passive(model=self.model, data=self.data)\n \n"
                },
                {
                    "date": 1691566852543,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,9 @@\n         self.dof = 9  # all joints (include gripper joint)\n         self.model_path = \"model/fr3.xml\"\n         self.model = mujoco.MjModel.from_xml_path(self.model_path)\n         self.data = mujoco.MjData(self.model)\n+        print(\"?\")\n         self.controller = controller.CController()\n         self._torque = np.zeros(self.k, dtype=np.float64)\n \n         self.viewer = viewer.launch_passive(model=self.model, data=self.data)\n"
                },
                {
                    "date": 1691566863378,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n         self.dof = 9  # all joints (include gripper joint)\n         self.model_path = \"model/fr3.xml\"\n         self.model = mujoco.MjModel.from_xml_path(self.model_path)\n         self.data = mujoco.MjData(self.model)\n-        print(\"?\")\n+        # print(\"?\")\n         self.controller = controller.CController()\n         self._torque = np.zeros(self.k, dtype=np.float64)\n \n         self.viewer = viewer.launch_passive(model=self.model, data=self.data)\n"
                },
                {
                    "date": 1691566966799,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n         self.model_path = \"model/fr3.xml\"\n         self.model = mujoco.MjModel.from_xml_path(self.model_path)\n         self.data = mujoco.MjData(self.model)\n         # print(\"?\")\n-        self.controller = controller.CController()\n+        # self.controller = controller.CController()\n         self._torque = np.zeros(self.k, dtype=np.float64)\n \n         self.viewer = viewer.launch_passive(model=self.model, data=self.data)\n \n"
                },
                {
                    "date": 1691566971921,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n         self.model_path = \"model/fr3.xml\"\n         self.model = mujoco.MjModel.from_xml_path(self.model_path)\n         self.data = mujoco.MjData(self.model)\n         # print(\"?\")\n-        # self.controller = controller.CController()\n+        self.controller = controller.CController()\n         self._torque = np.zeros(self.k, dtype=np.float64)\n \n         self.viewer = viewer.launch_passive(model=self.model, data=self.data)\n \n"
                },
                {
                    "date": 1691569197917,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,8 +13,9 @@\n         self.model = mujoco.MjModel.from_xml_path(self.model_path)\n         self.data = mujoco.MjData(self.model)\n         # print(\"?\")\n         self.controller = controller.CController()\n+        self.controller.initialize();\n         self._torque = np.zeros(self.k, dtype=np.float64)\n \n         self.viewer = viewer.launch_passive(model=self.model, data=self.data)\n \n"
                },
                {
                    "date": 1691569255135,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,11 +11,11 @@\n         self.dof = 9  # all joints (include gripper joint)\n         self.model_path = \"model/fr3.xml\"\n         self.model = mujoco.MjModel.from_xml_path(self.model_path)\n         self.data = mujoco.MjData(self.model)\n-        # print(\"?\")\n+        print(\"????????????????????????????????\")\n         self.controller = controller.CController()\n-        self.controller.initialize();\n+        self.controller.initialize()\n         self._torque = np.zeros(self.k, dtype=np.float64)\n \n         self.viewer = viewer.launch_passive(model=self.model, data=self.data)\n \n"
                },
                {
                    "date": 1691569267949,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n         self.dof = 9  # all joints (include gripper joint)\n         self.model_path = \"model/fr3.xml\"\n         self.model = mujoco.MjModel.from_xml_path(self.model_path)\n         self.data = mujoco.MjData(self.model)\n-        print(\"????????????????????????????????\")\n+        # print(\"????????????????????????????????\")\n         self.controller = controller.CController()\n         self.controller.initialize()\n         self._torque = np.zeros(self.k, dtype=np.float64)\n \n"
                },
                {
                    "date": 1691569283050,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,8 +14,9 @@\n         self.data = mujoco.MjData(self.model)\n         # print(\"????????????????????????????????\")\n         self.controller = controller.CController()\n         self.controller.initialize()\n+        # self.controller.initialize()\n         self._torque = np.zeros(self.k, dtype=np.float64)\n \n         self.viewer = viewer.launch_passive(model=self.model, data=self.data)\n \n"
                },
                {
                    "date": 1691569558776,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,10 +13,10 @@\n         self.model = mujoco.MjModel.from_xml_path(self.model_path)\n         self.data = mujoco.MjData(self.model)\n         # print(\"????????????????????????????????\")\n         self.controller = controller.CController()\n-        self.controller.initialize()\n         # self.controller.initialize()\n+        # self.controller.initialize()\n         self._torque = np.zeros(self.k, dtype=np.float64)\n \n         self.viewer = viewer.launch_passive(model=self.model, data=self.data)\n \n"
                },
                {
                    "date": 1691571534700,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n             # print(\"1\")\n             # print(self.data.qpos)\n             # print(\"2\")\n             self.controller.read(self.data.time, self.data.qpos[0:7], self.data.qvel[0:7])\n-            # print(self.data.time)\n+            print(self.data.time)\n             self.controller.control_mujoco()\n \n             self._torque = self.controller.write()\n             for i in range(self.k):\n"
                },
                {
                    "date": 1691571606055,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,8 +24,9 @@\n         # self.scene_option.flags[mujoco.mjtVisFlag.mjVIS_JOINT] = True\n \n         self.duration = 380  # (seconds)\n         self.framerate = 10  # (Hz)\n+        self.t = 1\n     def run(self) -> None:\n         # sleep(10)\n \n         while self.viewer.is_running():#self.data.time < self.duration:\n@@ -33,9 +34,12 @@\n             # print(\"1\")\n             # print(self.data.qpos)\n             # print(\"2\")\n             self.controller.read(self.data.time, self.data.qpos[0:7], self.data.qvel[0:7])\n-            print(self.data.time)\n+            # print(self.data.time)\n+            if self.data.time > 10 * self.t:\n+                self.controller.initialize()\n+                self.t = self.t + 1\n             self.controller.control_mujoco()\n \n             self._torque = self.controller.write()\n             for i in range(self.k):\n"
                },
                {
                    "date": 1691571635161,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n             # print(self.data.qpos)\n             # print(\"2\")\n             self.controller.read(self.data.time, self.data.qpos[0:7], self.data.qvel[0:7])\n             # print(self.data.time)\n-            if self.data.time > 10 * self.t:\n+            if self.data.time > 30 * self.t:\n                 self.controller.initialize()\n                 self.t = self.t + 1\n             self.controller.control_mujoco()\n \n"
                },
                {
                    "date": 1691571961944,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,10 +35,10 @@\n             # print(self.data.qpos)\n             # print(\"2\")\n             self.controller.read(self.data.time, self.data.qpos[0:7], self.data.qvel[0:7])\n             # print(self.data.time)\n-            if self.data.time > 30 * self.t:\n-                self.controller.initialize()\n+            if self.data.time > 3 * self.t:\n+                self.controller.reset_goal_pybind()\n                 self.t = self.t + 1\n             self.controller.control_mujoco()\n \n             self._torque = self.controller.write()\n"
                },
                {
                    "date": 1691571985242,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n             # print(\"2\")\n             self.controller.read(self.data.time, self.data.qpos[0:7], self.data.qvel[0:7])\n             # print(self.data.time)\n             if self.data.time > 3 * self.t:\n-                self.controller.reset_goal_pybind()\n+                self.controller.reset_goal()\n                 self.t = self.t + 1\n             self.controller.control_mujoco()\n \n             self._torque = self.controller.write()\n"
                },
                {
                    "date": 1691571997655,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n             # print(self.data.qpos)\n             # print(\"2\")\n             self.controller.read(self.data.time, self.data.qpos[0:7], self.data.qvel[0:7])\n             # print(self.data.time)\n-            if self.data.time > 3 * self.t:\n+            if self.data.time > 1 * self.t:\n                 self.controller.reset_goal()\n                 self.t = self.t + 1\n             self.controller.control_mujoco()\n \n"
                },
                {
                    "date": 1691572041137,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n             # print(self.data.qpos)\n             # print(\"2\")\n             self.controller.read(self.data.time, self.data.qpos[0:7], self.data.qvel[0:7])\n             # print(self.data.time)\n-            if self.data.time > 1 * self.t:\n+            if self.data.time > 15 * self.t:\n                 self.controller.reset_goal()\n                 self.t = self.t + 1\n             self.controller.control_mujoco()\n \n"
                }
            ],
            "date": 1691482752037,
            "name": "Commit-0",
            "content": "#!/usr/bin/env python3\nimport numpy as np\nfrom build.devel.lib import controller\nimport mujoco\nfrom time import sleep\n\nfrom mujoco import viewer\nclass fr3:\n    def __init__(self) -> None:\n        self.k = 7  # for jacobian calculation\n        self.dof = 9  # all joints (include gripper joint)\n        self.model_path = \"model/fr3.xml\"\n        self.model = mujoco.MjModel.from_xml_path(self.model_path)\n        self.data = mujoco.MjData(self.model)\n        self.controller = controller.CController(self.k)\n        self._torque = np.zeros(self.dof, dtype=np.float64)\n\n        self.viewer = viewer.launch_passive(model=self.model, data=self.data)\n\n        # self.scene_option = mujoco.MjvOption()\n        # self.scene_option.flags[mujoco.mjtVisFlag.mjVIS_JOINT] = True\n\n        self.duration = 380  # (seconds)\n        self.framerate = 10  # (Hz)\n    def run(self) -> None:\n        # sleep(10)\n\n        while self.viewer.is_running():#self.data.time < self.duration:\n            self.viewer.sync()\n            self.controller.read(self.data.time, self.data.qpos[0:self.dof], self.data.qvel[0:self.dof],\n                                 self.model.opt.timestep, self.data.xpos.reshape(66,))\n            # print(self.data.time)\n            self.controller.control_mujoco()\n\n            self._torque = self.controller.write()\n            for i in range(self.dof):\n                self.data.ctrl[i] = self._torque[i]\n\n            mujoco.mj_step(self.model, self.data)\n            sleep(0.002)\n        self.viewer.close()\n\ndef main():\n    panda = fr3()\n    panda.run()\n\n\nif __name__ == \"__main__\":\n    main()"
        }
    ]
}